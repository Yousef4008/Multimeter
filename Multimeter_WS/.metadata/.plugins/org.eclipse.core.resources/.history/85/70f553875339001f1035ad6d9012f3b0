/*
 * APP.c
 *
 *  Created on: Jun 30, 2024
 *      Author: Youssif Hossam
 */


#include "HAL/LCD/lcd.h"
#include "HAL/OHMMETER/ohmmeter.h"
#include "HAL/VOLTMETER/voltmeter.h"
#include "HAL/CAPACITANCE_METER/capacitance_meter.h"
#include "HAL/ADS1015/ads1015.h"
#include "HAL/MODE_SELECTOR/mode_selector.h"

#include "MCAL/ADC/adc.h"

#include "LIB/std_types.h"

#include <util/delay.h>
#include <avr/io.h>
#include <math.h>

#define R_PULLUP 34.8

int main(void){
	ADC_ConfigType  ADC_MyConfig = {Ext_AVCC , PRESCALER_128};
	ADS1015 ads;
	float resistance, voltage, capacitance;
	uint8 ohmSymbol[] = {0x0E, 0x11, 0x11, 0x11, 0x1B, 0x0A, 0x1B};
	OHMMETER_unitType resistanceUnit;
	CAPACITANCE_unitType capacitanceUnit;
	Mode_type currentMode, previousMode = 10;

	SREG |= 1<<7;

	ADC_init(&ADC_MyConfig);

	ADS1015_init(&ads, ADS1015_ADDRESS);
	ADS1015_begin(&ads);
	ADS1015_setGain(&ads, GAIN_TWOTHIRDS);

	LCD_init();
	LCD_StoreCustomPtrn(ohmSymbol, 0);

	GPIO_setupPinDirection(PORTA_ID, PIN1_ID, PIN_INPUT);
	GPIO_setupPinDirection(PORTA_ID, PIN2_ID, PIN_INPUT);
	GPIO_setupPinDirection(PORTB_ID, PIN4_ID, PIN_INPUT);
	GPIO_setupPinDirection(PORTB_ID, PIN5_ID, PIN_INPUT);
	GPIO_setupPinDirection(PORTB_ID, PIN6_ID, PIN_INPUT);


	while(1){

		MODE_SELECTOR_run(&currentMode, &previousMode);

		LCD_moveCursor(1,5);
		LCD_displayString("           ");
		LCD_moveCursor(1,5);

		switch(currentMode){

		case OHMMETER_MODE:
			resistance = OHMMETER_getReading(&ads, &resistanceUnit);
			LCD_floatToString(resistance);
			switch(resistanceUnit){
			case OHMS:
				LCD_DisplayCustomPtrn(0);
				break;
			case K_OHMS:
				LCD_displayCharacter('K');
				LCD_DisplayCustomPtrn(0);
				break;
			case M_OHMS:
				LCD_displayCharacter('M');
				LCD_DisplayCustomPtrn(0);

				break;
			}
			break;

			case VOLTMETER_MODE:
				voltage = VOLTMETER_getReading(&ads);
				LCD_floatToString(voltage);
				LCD_displayCharacter('V');
				break;
			case CAPMETER_MODE:
				capacitance = CAPACITANCE_METER_getReading(&capacitanceUnit);
				LCD_floatToString(capacitance);
				switch(capacitanceUnit){
				case PICO_FARAD:
					LCD_displayString("pF");
					break;
				case NANO_FARAD:
					LCD_displayString("nF");
					break;
				case MICRO_FARAD:
					LCD_displayString("uF");
					break;
				case MILLI_FARAD:
					LCD_displayString("mF");
					break;
				case FARAD:
					LCD_displayString("F");
					break;
				}
				break;
				case INDUCTOMETER_MODE:
					break;
				case CURRENTMETER_MODE:
					break;
		}
		_delay_ms(500);
	}


	return 0;
}
